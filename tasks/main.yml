---

- include: dist_vars.yml

- name: Install radvd package
  package:
    name: "{{ item }}"
    state: "latest"
  with_items: "{{ radvd_packages }}"

- name: Create /etc/radvd.conf.d directory
  file:
    path: "/etc/radvd.conf.d"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"

- name: Create configuration header
  template:
    src: "etc/radvd.conf.d/00_ansible.j2"
    dest: "/etc/radvd.conf.d/00_ansible"
    owner: "root"
    group: "root"
    mode: "0644"

- name: Configure radvd interfaces
  template:
    src: "etc/radvd.conf.d/interface.j2"
    dest: "/etc/radvd.conf.d/interface_{{ item.interface }}"
    owner: "root"
    group: "root"
    mode: "0644"
  with_items: "{{ radvd_interfaces }}"

- name: Map all radvd interfaces
  set_fact:
    _radvd_interfaces_names: "{{ radvd_interfaces | map(attribute='interface') | list }}"

- name: List current radvd interfaces configs
  shell: ls /etc/radvd.conf.d/interface_*
  register: _radvd_ls_old_netif_configs
  changed_when: false

- name: Remove old radvd interfaces configs
  file:
    path: "{{ item }}"
    state: absent
  when: "'{{ item|regex_replace('/etc/radvd\\.conf\\.d/interface_') }}' not in _radvd_interfaces_names"
  with_items: "{{ _radvd_ls_old_netif_configs.stdout_lines | default([]) }}"

- name: Assemble /etc/radvd.conf
  assemble:
    src: "/etc/radvd.conf.d"
    dest: "/etc/radvd.conf"
    owner: "root"
    group: "root"
    mode: "0644"
  notify: ["Test radvd and reload"]

# vim: set ts=2 sw=2:
